name: build-and-test

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # 3. Cache npm for frontend
    - name: Cache npm (frontend)
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    # 4. Clean environment for frontend
    - name: Clean environment (frontend)
      working-directory: ./frontend
      run: |
        rm -rf node_modules
        npm cache clean --force

    # 5. Install dependencies for frontend
    - name: Install dependencies (frontend)
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    # 6. Install dependencies (inner package)
    - name: Install dependencies (inner package)
      if: ${{ hashFiles('frontend/inner-package/package-lock.json') != '' }}
      working-directory: ./frontend/inner-package
      run: npm ci --legacy-peer-deps

    # 7. Run tests and save log
    - name: Run tests (frontend)
      working-directory: ./frontend
      run: npm test -- --watchAll=false | tee test-results.log

    # 8. Upload test log artifact
    - name: Upload test log
      uses: actions/upload-artifact@v4
      with:
        name: test-log
        path: frontend/test-results.log

    # 9. Build the app
    - name: Build the app
      working-directory: ./frontend
      run: npm run build

    # 10. Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: frontend/build/
