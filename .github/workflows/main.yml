name: build-and-test

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # 3. Cache npm for frontend
    - name: Cache npm (frontend)
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    # 4. Clean environment for frontend
    - name: Clean environment (frontend)
      working-directory: ./frontend
      run: |
        rm -rf node_modules
        npm cache clean --force

    # 5. Install dependencies for frontend
    - name: Install dependencies (frontend)
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    # 6. Install dependencies (inner package)
    - name: Install dependencies (inner package)
      if: ${{ hashFiles('frontend/inner-package/package-lock.json') != '' }}
      working-directory: ./frontend/inner-package
      run: npm ci --legacy-peer-deps

    # 7. Run tests and save log
    - name: Run tests (frontend)
      working-directory: ./frontend
      run: |
        npm test -- --watchAll=false --ci > test-results.log 2>&1

    # 8. Save and commit test log to ci-logs branch
    - name: Save and commit test log
      run: |
        mkdir -p ci-logs
        cp frontend/test-results.log ci-logs/test-log-${{ github.run_number }}.txt
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git fetch origin ci-logs || true
        git checkout ci-logs || git checkout --orphan ci-logs
        git add ci-logs/
        git commit -m "Add test log for run ${{ github.run_number }}"
        git push origin ci-logs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 9. Build the app
    - name: Build the app
      working-directory: ./frontend
      run: npm run build